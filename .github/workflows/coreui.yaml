name: UI CI

on:
  push:
    branches:
      - dev
      - master
      - rc
      - staging
      - build-test
      - v1
    paths:
      - "packages/erxes-ui/**"
      - "packages/ui-plugin-template/**"
      - "packages/ui-cards/**"
      - "packages/ui-forms/**"
      - "packages/ui-inbox/**"
      - "packages/ui-knowledgebase/**"
      - "packages/ui-leads/**"
      - "packages/ui-log/**"
      - "packages/ui-notifications/**"
      - "packages/ui-products/**"
      - "packages/ui-segments/**"
      - "packages/ui-settings/**"
      - "packages/ui-team/**"
      - "packages/ui-tags/**"
      - "packages/ui-automations/**"
      - "packages/core-ui/**"      
      - ".github/workflows/coreui.yaml"
      - "!ui/nginx/**"
      - "!ui/docker-entrypoint.sh"
      - "!ui/Dockerfile"
      - "!ui/.dockerignore"

jobs: 
  ui:
    runs-on: ubuntu-22.04

    steps:
      - name: Use Node.js 18.17.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.x

      - uses: actions/checkout@v4

      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn # since the yarn install runs at workspace level
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Build
        run: |
          yarn install --frozen-lockfile
          cd packages/core-ui
          yarn build

      - name: Configure OCI S3 compatible API credentials
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/v1' || github.ref == 'refs/heads/staging')
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.OCI_S3_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.OCI_S3_SECRET_KEY }}" >> $GITHUB_ENV
          echo "S3_ENDPOINT=https://${{ secrets.OCI_S3_NAMESPACE }}.compat.objectstorage.${{ secrets.OCI_S3_REGION }}.oraclecloud.com" >> $GITHUB_ENV

      - name: Deploy locales to OCI
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/v1' || github.ref == 'refs/heads/staging')
        run: |
          echo "Using S3_ENDPOINT: $S3_ENDPOINT"
          tar -cf locales.tar --directory=packages/core-ui/public/locales .
          aws s3 cp locales.tar s3://erxes-${GITHUB_REF#refs/heads/}-plugins/locales.tar --endpoint-url "$S3_ENDPOINT"

      - name: Deploy Core UI to OCI
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/dev' ||  github.ref == 'refs/heads/v1' || github.ref == 'refs/heads/staging')
        run: |
          tar -czf build.tar --directory=packages/core-ui/dist .
          cp build.tar packages/core-ui/dist
          aws s3 sync packages/core-ui/dist s3://erxes-${GITHUB_REF#refs/heads/}-plugins/uis/core-ui --endpoint-url "$S3_ENDPOINT" --delete

      - name: Build docker image
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/rc' || github.ref == 'refs/heads/dev' ||  github.ref == 'refs/heads/v1' || github.ref == 'refs/heads/staging')
        env:
          BASE_IMAGE: 5240help/erxes:base-1.18-alpine
        run: |
          cd packages/core-ui
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          DOCKER_BUILDKIT=1 docker build --build-arg BASE_IMAGE=$BASE_IMAGE -t 5240help/erxes:${GITHUB_REF#refs/heads/} -f Dockerfile .
          docker push 5240help/erxes:${GITHUB_REF#refs/heads/}
